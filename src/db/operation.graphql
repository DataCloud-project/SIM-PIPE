# Get all simulations
query AllSimulations {
  simulations {
    simulation_id
    runs {
      created
      simulation {
        created
      }
    }
  }
}

query allRunsAndSteps {
  runs {
    created
    started
    status
    steps {
      created
      ended
    }
  }
}

mutation startNewRun($simulation_id: uuid!) {
  start_run(object: {dsl: {test: true}, simulation_id: $simulation_id}) {
    run_id
    created
  }
}
# api functions ..
mutation createRun($simulation_id: uuid!, $dsl: jsonb!) {
  start_run(object: {dsl: $dsl, simulation_id: $simulation_id}) {
    run_id
    created
    status
  }
}

mutation createStep($run_id: uuid!, $name: String!, $image: String!, $pipeline_step_number: Int!) {
  insert_steps_one(object: {run_id: $run_id, name:$name, image:$image, pipeline_step_number:$pipeline_step_number}){
    created
    run_id
    step_id
    status
    name
  }
}

mutation startStep($step_id: Int!) {
  update_steps_by_pk(pk_columns: {step_id: $step_id}, _set: {started: "now()", status: "'active'"}) {
    step_id
    started
    status
    name
    pipeline_step_number
    created
  }
}
