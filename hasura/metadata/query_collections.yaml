- name: allowed-queries
  definition:
    queries:
    - name: Start Run
      query: |-
        mutation start_run($run_id: String!) {
          Start_Run(run_id: $run_id)
        }
    - name: create_run
      query: |-
        mutation create_run($simulation_id: String!, $dsl: String!, $name: String!) {
          Create_Run(dsl: $dsl, simulation_id: $simulation_id, name: $name)
        }
    - name: get_run
      query: |-
        query get_run($run_id: uuid!) {
          get_run(run_id: $run_id) {
            name
            created
            started
            ended
            dsl
            steps(order_by: {step_id: asc}) {
              created
              started
              ended
              resource_usages(order_by: {time: asc}) {
                time
                cpu
                memory
                memory_max
                rx_value
                tx_value
              }
              log {
                text
              }
              name
              status
            }
          }
        }
    - name: simulations
      query: |-
        query simulations {
          simulations(order_by: {created: desc}) {
            created
            simulation_id
            name
            runs(order_by: {started: desc}) {
              run_id
              name
              created
              status
              started
              ended
            }
          }
        }
    - name: get_simulation
      query: |-
        query prout($simulation_id: uuid!) {
          get_simulation(simulation_id: $simulation_id) {
            created
            name
            runs {
              name
              created
              ended
              status
              started
              dsl
              steps(order_by: {step_id: asc}) {
                name
                status
                log {
                  text
                }
                cpu(order_by: {time: asc}) {
                  value
                  time
                }
                memory(order_by: {time: asc}) {
                  time
                  value
                }
              }
            }
          }
        }
