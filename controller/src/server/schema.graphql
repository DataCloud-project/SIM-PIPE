scalar uuid
scalar json

type Query {
  """ Fetch the current username. """
  username: String! @auth
  """ Compute a presigned URL for uploading a file using a HTTP PUT. """
  computeUploadPresignedUrl: String! @auth
  """ Returns pong if the server is up and running. """
  ping: String!
  """ List of docker registry credentials. """
  dockerRegistryCredentials: [DockerRegistryCredential!]! @auth
}

type Run {
  """ UUID of the run """
  runId: uuid!
}

type Simulation {
  """ UUID of the simulation """
  simulationId: uuid!
}

type DockerRegistryCredential {
  """ The name of the docker registry """
  name: String!
  """ The username to use when authenticating with the docker registry """
  username: String!
  """ The docker registry endpoint """
  server: String!
}

input DockerRegistryCredentialInput {
  """ The name of the docker registry """
  name: String!
  """ The username to use when authenticating with the docker registry """
  username: String!
  """ The password to use when authenticating with the docker registry """
  password: String!
  """ The docker registry endpoint """
  server: String!
}


input StepEnvironmentVariable {
  """ The name of the step to set the environment variable for """
  stepName: String!
  """ The name of the environment variable """
  name: String!
  """ The value of the environment variable """
  value: String!
}

input StepTimeout {
  """ The name of the step to set the timeout for """
  stepName: String!
  """ The timeout in seconds, must be greater than 0 and less than 86400 (24 hours) """
  timeout: Int!
}

""" The input data to create a run """
input CreateRunInput {
  """ The simulation to which this run belongs.

      The user must own the simulation.
  """
  simulationId: uuid!

  """ The name of the run """
  name: String!

  """ An optional list of environment variables to set for the steps of the run container """
  environmentVariables: [StepEnvironmentVariable!]

  """ An optional list of timeouts to set for the steps of the run container """
  timeouts: [StepTimeout!]
}

input CreateSimulationInput {
  """ The name of the simulation """
  name: String!
  """ The description of the simulation pipeline.

  It is a JSON document but it must be sent as a string,
  because not all GraphQL clients support sending JSON documents
  in input variables.
  """
  pipelineDescription: json!
}

type Mutation @auth {
  """ Create a simulation """
  createSimulation(simulation: CreateSimulationInput!): Simulation!

  """ Create a run, but does not start it """
  createRun(run: CreateRunInput!): Run!

  """ Start a run, if other runs are running this run will wait in the queue """
  startRun(runId:uuid!): Run

  """ Cancel a run, if the run is running it will be stopped """
  cancelRun(runId:uuid!): Run

  """ Create a docker registry credential """
  createDockerRegistryCredential(credential: DockerRegistryCredentialInput!): DockerRegistryCredential!

  """ Delete a docker registry credential """
  deleteDockerRegistryCredential(name: String!): Boolean!

  """ Update a docker registry credential """
  updateDockerRegistryCredential(credential: DockerRegistryCredentialInput!): DockerRegistryCredential!
}
